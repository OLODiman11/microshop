server.port: 0

spring:
    application.name: order-service
    datasource:
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://localhost:5432/order-service
        username: postgres
        password: postgres
    jpa:
        hibernate.ddl-auto: none
    kafka:
      bootstrap-servers: localhost:9092
      template.default-topic: notificationTopic
      producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        properties:
          json.type.mapping: event:by.olodiman11.microshop.orderservice.event.OrderPlacedEvent;

eureka:
  client:
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka

management:
  endpoints.web.exposure.include: health, info, metrics, prometheus
  metrics.distribution.percentiles-histogram.http.server.requests: true
  observations.key-values.application: order-service
  tracing.sampling.probability: 1.0

resilience4j:
  circuitbreaker.instances.inventory:
    registerHealthIndicator: true
    event-consumer-buffer-size: 10
    slidingWindowType: COUNT_BASED
    slidingWindowSize: 5
    failureRateThreshold: 50
    waitDurationInOpenState: 5s
    permittedNumberOfCallsInHalfOpenState: 3
    automaticTransitionFromOpenToHalfOpenEnabled: true
  timelimiter.instances.inventory:
    timeout-duration: 3s
  retry.instances.inventory:
    max-attempts: 3
    wait-duration: 5s
